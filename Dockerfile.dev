# Stage 1 ===================================================================

FROM golang:1.12 as builder

### Create new directly and set it as working directory
RUN mkdir -p /app
WORKDIR /app

### Copy Go application dependency files
# COPY go.mod .
# COPY go.sum .

### Setting a proxy for downloading modules
# ENV GOPROXY https://proxy.golang.org,direct

# Download all the dependencies and install the package
RUN go get -d -v ./...
RUN go install -v ./...

### Copy actual source code for building the application
COPY . .

### CGO has to be disabled cross platform builds
### Otherwise the application won't be able to start
# ENV CGO_ENABLED=0

### Build the Go app for a linux OS
### 'scratch' and 'alpine' both are Linux distributions
RUN GOOS=linux go build ./app.go

# Stage 2 ===================================================================

### Define the running image
FROM scratch

### Set working directory
WORKDIR /app

### Copy built binary application from 'builder' image
COPY --from=builder /app/app .

### Run the binary application
CMD ["/app/app"]